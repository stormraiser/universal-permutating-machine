tag U = (1, 1, 1), D = (1, 0.8, 0), R = (0, 0, 0.8);
tag L = (0, 0.5, 0), F = (0.8, 0, 0), B = (0.8, 0.3, 0);
tag body = (0.1, 0.1, 0.1);

symmetry x {
    cycle (U, R, D, L);
    axisangle (1, 0, 0, -90);
}

symmetry y {
    cycle (F, U, B, D);
    axisangle (0, 1, 0, -90);
}

geometry center {
    model "block_7.off";
    translate(0, 0, 5.5)
        model "sticker_7.off";
}

geometry edge {
    model "block_7.off";
    translate(0, 0, 5.5)
        model "sticker_7.off";
    translate(0, 5.5, 0)
        rotate(-90, 0, 0)
            model "sticker_7.off";
}

geometry corner {
    model "block_7.off";
    translate(0, 0, 5.5)
        model "sticker_7.off";
    translate(0, 5.5, 0)
        rotate(-90, 0, 0)
            model "sticker_7.off";
    translate(5.5, 0, 0)
        rotate(0, 90, 0)
            model "sticker_7.off";
}

auto (x, y) {
    translate(0, 0, 33)
        block U = center(body, U);
    translate(0, 11, 33)
        block UR3 = center(body, U);
    translate(0, 22, 33)
        block UR2 = center(body, U);
    translate(0, 33, 33)
        block UR = edge(body, U, R);
    translate(11, 11, 33)
        block UR3F3 = center(body, U);
    translate(11, 22, 33)
        block UR2F3 = center(body, U);
    translate(11, 33, 33)
        block URF3 = edge(body, U, R);
    translate(22, 11, 33)
        block UR3F2 = center(body, U);
    translate(22, 22, 33)
        block UR2F2 = center(body, U);
    translate(22, 33, 33)
        block URF2 = edge(body, U, R);
    translate(33, 33, 33)
        block URF = corner(body, U, R, F);
    block alias (UR, RU), (URF, RFU);
    position U, UR3, UR2, UR, UR3F3, UR2F3, URF3, UR3F2, UR2F2, URF2, UR3F, UR2F, URF;
    
    operation U {
        axisangle(0, 0, 1, -90) {
            cycle (U);
            shift (UR3, UF3), (UR2, UF2), (UR, UF);
            shift (UR3F3, UF3L3), (UR2F3, UF2L3), (URF3, UFL3);
            shift (UR3F2, UF3L2), (UR2F2, UF2L2), (URF2, UFL2);
            shift (UR3F, UF3L), (UR2F, UF2L), (URF, UFL);
            shift (RU, FU), (RF3U, FL3U), (RF2U, FL2U), (RFU, FLU);
            shift (FUR, LUF), (FUR2, LUF2), (FUR3, LUF3);
        }
    }
    operation U' inverse U;
    
    operation U2 {
        axisangle(0, 0, 1, -90) {
            shift (RU2, FU2), (RF3U2, FL3U2), (RF2U2, FL2U2), (RFU2, FLU2);
            shift (FU2R, LU2F), (FU2R2, LU2F2), (FU2R3, LU2F3);
        }
    }
    operation U2' inverse U2;
    
    operation U3 {
        axisangle(0, 0, 1, -90) {
            shift (RU3, FU3), (RF3U3, FL3U3), (RF2U3, FL2U3), (RFU3, FLU3);
            shift (FU3R, LU3F), (FU3R2, LU3F2), (FU3R3, LU3F3);
        }
    }
    operation U3' inverse U3;
    
    operation Um {
        axisangle(0, 0, 1, -90) {
            shift (R, F);
            shift (RF3, FL3), (RF2, FL2), (RF, FL);
            shift (FR, LF), (FR2, LF2), (FR3, LF3);
        }
    }
    
    binding U {
        invoke U;
        translate(0, 0, 33)
            click "selector_7_1_cw.off";
    }

    binding U' {
        invoke U';
        translate(0, 0, 33)
            click "selector_7_1_ccw.off";
    }

    binding U2 {
        invoke U2;
        translate(0, 0, 22)
            click "selector_7_2_cw.off";
    }

    binding U2' {
        invoke U2';
        translate(0, 0, 22)
            click "selector_7_2_ccw.off";
    }

    binding U3 {
        invoke U3;
        translate(0, 0, 11)
            click "selector_7_2_cw.off";
    }

    binding U3' {
        invoke U3';
        translate(0, 0, 11)
            click "selector_7_2_ccw.off";
    }
    
    binding Um {
        invoke Um;
        click "selector_7_2_cw.off";
    }
}

operation dummy;

binding dummy {
    invoke dummy;
    click "selector_7_0.off";
}
